definitions:
  models.OrderItem:
    properties:
      id:
        type: string
      menuID:
        type: string
      orderID:
        type: string
      quantity:
        type: integer
    type: object
  models.OrderStatus:
    enum:
    - preparing
    - served
    - succeeded
    - cancelled
    type: string
    x-enum-varnames:
    - PREPARING
    - SERVED
    - SUCCEEDED
    - CANCELLED
  models.Role:
    enum:
    - manager
    - employee
    type: string
    x-enum-varnames:
    - Manager
    - Employee
  models.StaffNotificationStatus:
    enum:
    - pending
    - accepted
    - rejected
    type: string
    x-enum-varnames:
    - PENDING
    - ACCEPTED
    - REJECTED
  requests.AddCategoryRequest:
    properties:
      categoryName:
        type: string
    required:
    - categoryName
    type: object
  requests.AddTableRequest:
    properties:
      tableName:
        type: string
    required:
    - tableName
    type: object
  requests.AssignTableRequest:
    properties:
      id:
        type: string
      peopleAmount:
        type: integer
    required:
    - id
    - peopleAmount
    type: object
  requests.ChargeFeeFoodOverWeightRequest:
    properties:
      invoice_id:
        type: string
      total_food_weight:
        type: number
    required:
    - invoice_id
    - total_food_weight
    type: object
  requests.CustomerAddPointRequest:
    properties:
      phone:
        type: string
      pin:
        type: string
      point:
        type: integer
    required:
    - phone
    - pin
    - point
    type: object
  requests.CustomerRedeemRequest:
    properties:
      invoice_id:
        type: string
      phone:
        type: string
      pin:
        type: string
    required:
    - invoice_id
    - phone
    - pin
    type: object
  requests.CustomerRegisterRequest:
    properties:
      phone:
        type: string
      pin:
        type: string
    required:
    - phone
    - pin
    type: object
  requests.EditPriceFeeFoodOverWeight:
    properties:
      price_fee_food_overweight:
        type: number
    required:
    - price_fee_food_overweight
    type: object
  requests.EditPricePerPerson:
    properties:
      price:
        type: number
    required:
    - price
    type: object
  requests.EditTableRequest:
    properties:
      id:
        type: string
      tableName:
        type: string
    required:
    - id
    - tableName
    type: object
  requests.EditUsePointPerPerson:
    properties:
      use_point_per_person:
        type: integer
    required:
    - use_point_per_person
    type: object
  requests.OrderItemRequest:
    properties:
      menu_id:
        type: string
      quantity:
        type: integer
    required:
    - menu_id
    - quantity
    type: object
  requests.StaffNotificationRequest:
    properties:
      table_id:
        type: string
    required:
    - table_id
    type: object
  requests.UpdateInvoiceStatusRequest:
    properties:
      invoice_id:
        type: string
    required:
    - invoice_id
    type: object
  requests.UpdateOrderStatusRequest:
    properties:
      status:
        type: string
      table_id:
        type: string
    required:
    - status
    - table_id
    type: object
  requests.UpdateStaffNotificationRequest:
    properties:
      staff_notification_id:
        type: string
      status:
        $ref: '#/definitions/models.StaffNotificationStatus'
    type: object
  requests.UserAddOrderRequest:
    properties:
      order_items:
        items:
          $ref: '#/definitions/requests.OrderItemRequest'
        type: array
    required:
    - order_items
    type: object
  requests.UserLoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  requests.UserRegisterRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - name
    - password
    type: object
  responses.BaseCustomer:
    properties:
      id:
        type: string
      phone:
        type: string
      point:
        type: integer
    type: object
  responses.CategoryDetail:
    properties:
      createdAt:
        type: string
      id:
        type: string
      name:
        type: string
      updatedAt:
        type: string
    type: object
  responses.InvoiceDetail:
    properties:
      createdAt:
        type: string
      customer_phone:
        type: string
      id:
        type: string
      isPaid:
        type: boolean
      peopleAmount:
        type: integer
      price_fee_food_overweight:
        type: number
      tableId:
        type: string
      totalPrice:
        type: number
      updatedAt:
        type: string
    type: object
  responses.MenuDetail:
    properties:
      categoryId:
        type: string
      description:
        type: string
      id:
        type: string
      imageUrl:
        type: string
      isAvailable:
        type: boolean
      name:
        type: string
    type: object
  responses.NumberMenu:
    properties:
      categoryId:
        type: string
      description:
        type: string
      id:
        type: string
      imageUrl:
        type: string
      isAvailable:
        type: boolean
      name:
        type: string
      number:
        type: integer
    type: object
  responses.OrderDetail:
    properties:
      createdAt:
        type: string
      id:
        type: string
      orderItem:
        items:
          $ref: '#/definitions/models.OrderItem'
        type: array
      status:
        $ref: '#/definitions/models.OrderStatus'
      tableId:
        type: string
      updatedAt:
        type: string
    type: object
  responses.SettingResponse:
    properties:
      key:
        type: string
      value:
        type: string
    type: object
  responses.StaffNotificationBase:
    properties:
      createdAt:
        type: string
      id:
        type: string
      status:
        $ref: '#/definitions/models.StaffNotificationStatus'
      table_id:
        type: string
      updatedAt:
        type: string
    type: object
  responses.SuccessResponse:
    properties:
      message:
        type: string
    type: object
  responses.TableDetail:
    properties:
      accessCode:
        type: string
      createdAt:
        type: string
      entryAt:
        type: string
      id:
        type: string
      isAvailable:
        type: boolean
      qrcode:
        type: string
      tableName:
        type: string
      updatedAt:
        type: string
    type: object
  responses.UserLoginResponse:
    properties:
      email:
        type: string
      id:
        type: string
      name:
        type: string
      role:
        $ref: '#/definitions/models.Role'
      token:
        type: string
    type: object
  responses.UserRegisterResponse:
    properties:
      message:
        type: string
    type: object
info:
  contact: {}
  description: This is the BuffetPOS API documentation.
  title: BuffetPOS API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Check user credentials and return user data.
      parameters:
      - description: User login request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.UserLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.UserLoginResponse'
      summary: User login.
      tags:
      - User
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user.
      parameters:
      - description: User register request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.UserRegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.UserRegisterResponse'
      summary: User register (Employee Role by default)
      tags:
      - User
  /customer/categories:
    get:
      consumes:
      - application/json
      description: Get all categories.
      parameters:
      - description: Access Code
        in: header
        name: AccessCode
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.CategoryDetail'
            type: array
      summary: Get All Categories
      tags:
      - Customer
  /customer/invoices:
    get:
      consumes:
      - application/json
      description: Get invoice by table ID.
      parameters:
      - description: Access Code
        in: header
        name: AccessCode
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.InvoiceDetail'
      summary: Get Invoice
      tags:
      - Customer
  /customer/menus:
    get:
      consumes:
      - application/json
      description: Find all menus.
      parameters:
      - description: Access Code
        in: header
        name: AccessCode
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.MenuDetail'
            type: array
      summary: Customer Find All Menus
      tags:
      - Customer
  /customer/menus/{id}:
    get:
      consumes:
      - application/json
      description: Find menu by ID.
      parameters:
      - description: Menu ID
        in: path
        name: id
        required: true
        type: string
      - description: Access Code
        in: header
        name: AccessCode
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.MenuDetail'
      summary: Customer Find Menu By ID
      tags:
      - Customer
  /customer/orders:
    post:
      consumes:
      - application/json
      description: Add order to table.
      parameters:
      - description: User Add Order Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.UserAddOrderRequest'
      - description: Access Code
        in: header
        name: AccessCode
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.SuccessResponse'
      summary: Add Order
      tags:
      - Customer
  /customer/orders/history:
    get:
      consumes:
      - application/json
      description: Get order history for table.
      parameters:
      - description: Access Code
        in: header
        name: AccessCode
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.OrderDetail'
            type: array
      summary: Get Order History
      tags:
      - Customer
  /customer/staff-notifications:
    post:
      consumes:
      - application/json
      description: Notify to Staff
      parameters:
      - description: Notify to Staff request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.StaffNotificationRequest'
      - description: Access Code
        in: header
        name: AccessCode
        required: true
        type: string
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responses.SuccessResponse'
      summary: Notify to Staff
      tags:
      - Customer
  /customer/staff-notifications/{table_id}:
    get:
      consumes:
      - application/json
      description: Get Staff Notification By Table ID
      parameters:
      - description: Table ID
        in: path
        name: table_id
        required: true
        type: string
      - description: Access Code
        in: header
        name: AccessCode
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.StaffNotificationBase'
      summary: Get Staff Notification By Table ID
      tags:
      - Customer
  /customer/tables:
    get:
      consumes:
      - application/json
      description: Find customer table.
      parameters:
      - description: Access Code
        in: header
        name: AccessCode
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.TableDetail'
      summary: Find Customer Table
      tags:
      - Customer
  /general/menus/best-selling:
    get:
      consumes:
      - application/json
      description: Get Best Selling Menu
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.NumberMenu'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Get Best Selling Menu
      tags:
      - General
  /loyalty/add-point:
    post:
      consumes:
      - application/json
      description: Add points to a customer's account
      parameters:
      - description: Add Point Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.CustomerAddPointRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.BaseCustomer'
      security:
      - ApiKeyAuth: []
      summary: Add Points to Customer
      tags:
      - Loyalty
  /loyalty/customer/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a customer by their ID
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.SuccessResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete a Customer
      tags:
      - Loyalty
  /loyalty/customers:
    get:
      consumes:
      - application/json
      description: Find all customers
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.BaseCustomer'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Find All Customer
      tags:
      - Loyalty
  /loyalty/redeem:
    post:
      consumes:
      - application/json
      description: Redeem points from a customer's account
      parameters:
      - description: Redeem Point Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.CustomerRedeemRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.BaseCustomer'
      security:
      - ApiKeyAuth: []
      summary: Redeem Points from Customer
      tags:
      - Loyalty
  /loyalty/register:
    post:
      consumes:
      - application/json
      description: Register a new customer in the system
      parameters:
      - description: Register Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.CustomerRegisterRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.SuccessResponse'
      security:
      - ApiKeyAuth: []
      summary: Register a New Customer
      tags:
      - Loyalty
  /manage/categories:
    get:
      consumes:
      - application/json
      description: Find all categories.
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.CategoryDetail'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Find All Categories
      tags:
      - Manage
    post:
      consumes:
      - application/json
      description: Add a new category.
      parameters:
      - description: Add Category request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.AddCategoryRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.SuccessResponse'
      security:
      - ApiKeyAuth: []
      summary: Add Category
      tags:
      - Manage
  /manage/categories/{id}:
    delete:
      consumes:
      - application/json
      description: Delete category by ID.
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.SuccessResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete Category
      tags:
      - Manage
    get:
      consumes:
      - application/json
      description: Find category by ID.
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.CategoryDetail'
      security:
      - ApiKeyAuth: []
      summary: Find Category By ID
      tags:
      - Manage
  /manage/invoices/{invoice_id}:
    delete:
      consumes:
      - application/json
      description: Cancel invoice.
      parameters:
      - description: Invoice ID
        in: path
        name: invoice_id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.SuccessResponse'
      security:
      - ApiKeyAuth: []
      summary: Cancel Invoice
      tags:
      - Manage
  /manage/invoices/charge-food-overweight:
    put:
      consumes:
      - application/json
      description: Charge Fee Food Overweight By ID
      parameters:
      - description: Charge Fee Food Overweight Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.ChargeFeeFoodOverWeightRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.SuccessResponse'
      security:
      - ApiKeyAuth: []
      summary: Charge Fee Food Overweight
      tags:
      - Manage
  /manage/invoices/paid:
    get:
      consumes:
      - application/json
      description: Get all paid invoices.
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.InvoiceDetail'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Get All Paid
      tags:
      - Manage
  /manage/invoices/set-paid:
    put:
      consumes:
      - application/json
      description: Set invoice as paid.
      parameters:
      - description: Update Invoice Status Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateInvoiceStatusRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.SuccessResponse'
      security:
      - ApiKeyAuth: []
      summary: Set Invoice Paid
      tags:
      - Manage
  /manage/invoices/unpaid:
    get:
      consumes:
      - application/json
      description: Get all unpaid invoices.
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.InvoiceDetail'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Get All Unpaid
      tags:
      - Manage
  /manage/menus:
    get:
      consumes:
      - application/json
      description: Find all menus.
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.MenuDetail'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Find All Menus
      tags:
      - Manage
    post:
      consumes:
      - multipart/form-data
      description: Add a new menu.
      parameters:
      - in: formData
        name: categoryId
        type: string
      - in: formData
        name: description
        type: string
      - in: formData
        name: isAvailable
        required: true
        type: boolean
      - in: formData
        name: name
        required: true
        type: string
      - description: Menu Image
        in: formData
        name: image
        required: true
        type: file
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.SuccessResponse'
      security:
      - ApiKeyAuth: []
      summary: Add Menu
      tags:
      - Manage
    put:
      consumes:
      - multipart/form-data
      description: Edit menu by ID.
      parameters:
      - in: formData
        name: categoryId
        type: string
      - in: formData
        name: description
        type: string
      - in: formData
        name: id
        required: true
        type: string
      - in: formData
        name: isAvailable
        type: boolean
      - in: formData
        name: name
        type: string
      - description: Menu Image
        in: formData
        name: image
        type: file
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.SuccessResponse'
      security:
      - ApiKeyAuth: []
      summary: Edit Menu
      tags:
      - Manage
  /manage/menus/{id}:
    delete:
      consumes:
      - application/json
      description: Delete menu by ID.
      parameters:
      - description: Menu ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.SuccessResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete Menu
      tags:
      - Manage
    get:
      consumes:
      - application/json
      description: Find menu by ID.
      parameters:
      - description: Menu ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.MenuDetail'
      security:
      - ApiKeyAuth: []
      summary: Find Menu By ID
      tags:
      - Manage
  /manage/orders:
    get:
      consumes:
      - application/json
      description: Get orders by status.
      parameters:
      - description: Status of order
        in: query
        name: status
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.OrderDetail'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Get Orders By Status
      tags:
      - Manage
  /manage/orders/status:
    put:
      consumes:
      - application/json
      description: Update order status.
      parameters:
      - description: Update Order Status Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateOrderStatusRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.SuccessResponse'
      security:
      - ApiKeyAuth: []
      summary: Update Order Status
      tags:
      - Manage
  /manage/orders/tables:
    get:
      consumes:
      - application/json
      description: Get orders by table ID.
      parameters:
      - description: Table ID
        in: query
        name: tableID
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.OrderDetail'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Get Orders By Table ID
      tags:
      - Manage
  /manage/settings/price-fee-food-overweight:
    get:
      consumes:
      - application/json
      description: Get price fee food overweight in setting.
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.SettingResponse'
      security:
      - ApiKeyAuth: []
      summary: Get Price Fee Food Overweight
      tags:
      - Manage
    put:
      consumes:
      - application/json
      description: Update price fee overweight in setting.
      parameters:
      - description: Edit Price Fee Food Overweight Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.EditPriceFeeFoodOverWeight'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.SuccessResponse'
      security:
      - ApiKeyAuth: []
      summary: Set Price Fee Food Overweight
      tags:
      - Manage
  /manage/settings/price-per-person:
    get:
      consumes:
      - application/json
      description: Get price per person in setting.
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.SettingResponse'
      security:
      - ApiKeyAuth: []
      summary: Get Price Per Person
      tags:
      - Manage
    put:
      consumes:
      - application/json
      description: Update price per person in setting.
      parameters:
      - description: Edit Price Per Person Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.EditPricePerPerson'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.SuccessResponse'
      security:
      - ApiKeyAuth: []
      summary: Set Price Per Person
      tags:
      - Manage
  /manage/settings/use-point-per-person:
    get:
      consumes:
      - application/json
      description: Get use point per person in setting.
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.SettingResponse'
      security:
      - ApiKeyAuth: []
      summary: Get Use Point Per Person
      tags:
      - Manage
    put:
      consumes:
      - application/json
      description: Update use point per person in setting.
      parameters:
      - description: Edit Use Point Per Person Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.EditUsePointPerPerson'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.SuccessResponse'
      security:
      - ApiKeyAuth: []
      summary: Set Use Point Per Person
      tags:
      - Manage
  /manage/staff-notifications:
    get:
      consumes:
      - application/json
      description: Get All Staff Notification.
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.StaffNotificationBase'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Get All Staff Notification
      tags:
      - Manage
    put:
      consumes:
      - application/json
      description: Set invoice as paid.
      parameters:
      - description: Update Staff Notification Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateStaffNotificationRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.SuccessResponse'
      security:
      - ApiKeyAuth: []
      summary: Update Status Staff Notification
      tags:
      - Manage
  /manage/staff-notifications/{status}:
    get:
      consumes:
      - application/json
      description: Get All Staff Notification By Status
      parameters:
      - description: Status Notification
        in: path
        name: status
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.StaffNotificationBase'
      security:
      - ApiKeyAuth: []
      summary: Get All Staff Notification By Status
      tags:
      - Manage
  /manage/tables:
    get:
      consumes:
      - application/json
      description: Find all tables.
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.TableDetail'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Find All Tables
      tags:
      - Manage
    post:
      consumes:
      - application/json
      description: Add a new table.
      parameters:
      - description: Add Table request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.AddTableRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.SuccessResponse'
      security:
      - ApiKeyAuth: []
      summary: Add Table
      tags:
      - Manage
    put:
      consumes:
      - application/json
      description: Edit Table by ID.
      parameters:
      - description: Edit Table Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.EditTableRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.SuccessResponse'
      security:
      - ApiKeyAuth: []
      summary: Edit Table
      tags:
      - Manage
  /manage/tables/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Table by ID.
      parameters:
      - description: Table ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.SuccessResponse'
      security:
      - Api: []
      summary: Delete Table
      tags:
      - Manage
    get:
      consumes:
      - application/json
      description: Find table by ID.
      parameters:
      - description: Table ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.TableDetail'
      security:
      - ApiKeyAuth: []
      summary: Find Table By ID
      tags:
      - Manage
  /manage/tables/assign:
    post:
      consumes:
      - application/json
      description: Assign Table by ID.
      parameters:
      - description: Assign Table Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.AssignTableRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.TableDetail'
      security:
      - ApiKeyAuth: []
      summary: Assign Table
      tags:
      - Manage
swagger: "2.0"
